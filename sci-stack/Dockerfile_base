FROM ubuntu:focal
ARG LLVM=9

# This platform includes dependencies for building docs
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
      clang-${LLVM} \
      cmake \
      g++ \
      gfortran \
      git \
      vim \
      lldb-${LLVM} \
      hdf5-tools \
      libmkl-full-dev \ 
      libboost-dev \
      libclang-${LLVM}-dev \
      libc++-${LLVM}-dev \
      libc++abi-${LLVM}-dev \
      libfftw3-dev \
      libnfft3-dev \
      libgfortran4 \
      libgmp-dev \
      libhdf5-dev \
      libopenmpi-dev \
      openmpi-bin \
      openmpi-common \
      openmpi-doc \
      python3-clang-${LLVM} \
      python3-dev \
      python3-mako \
      python3-numpy \
      python3-scipy \
      python3-matplotlib \
      python3-mpi4py \
      python3-pip \
      python3-sphinx \
      python3-nbsphinx \
      python3-notebook \
      libpython3-dev \
      git \
      curl \
      ca-certificates \
      openssl \
      wget \
      rsync \
      libomp-dev \
      nano \
      sudo \
      less \
      # Jupyter lab packages
      texlive \
      dvipng \
      texlive-latex-extra \
      texlive-fonts-recommended \
      nodejs \
      npm \
      && \
      apt-get autoremove --purge -y && \
      apt-get autoclean -y && \
      rm -rf /var/cache/apt/* /var/lib/apt/lists/*
     
ENV PYTHON_VERSION=3.8 \
    CC=clang-${LLVM} CXX=clang++-${LLVM} CXXFLAGS="-stdlib=libc++"
RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM} 60 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM} --slave /usr/bin/clang-cpp clang-cpp /usr/bin/clang-cpp-${LLVM}

RUN pip3 install --no-cache-dir \
    cython \
    numpy \
    scipy \
    matplotlib \
    decorator \
    jupyter \
    ipywidgets \
    sphinx-autobuild \
    pytest \
    pandas \
    shapely \
    monty \
    mpi4py \
    pymatgen \
    Jinja2 \
    Mako \
    tornado \
    zmq \
    notebook \
    tk \
    # Jupyter lab packages
    jupyterlab \
    descartes \
    ipympl \
    RISE 

# jupyter lab extension
RUN jupyter-labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib @jupyterlab/toc
RUN jupyter-lab build

ENV OMP_NUM_THREADS=1
ENV MKL_NUM_THREADS=1

# create a useful work dir
RUN cd / && mkdir work && cd work
ENV OMPI_MCA_btl_vader_single_copy_mechanism=none

# make python3 defaul
RUN `ln -s /usr/bin/python3 /usr/bin/python`

# expose port for jupyter
EXPOSE 8378

COPY entrypoint.sh /usr/local/bin/entrypoint.sh
COPY jupyter_start.sh /usr/local/bin/jupyter.sh

RUN ["chmod", "+x", "/usr/local/bin/entrypoint.sh"]
RUN ["chmod", "+x", "/usr/local/bin/jupyter.sh"]

# change user and group id to match host machine if options are passed accordingly
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

