FROM ubuntu:22.04

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    cmake \
    g++-12 \
    gfortran-12 \
    git \
    hdf5-tools \
    liblapack-dev \
    libboost-dev \
    libfftw3-dev \
    libnfft3-dev \
    libgfortran5 \
    libgmp-dev \
    libhdf5-dev \
    libopenmpi-dev \
    openmpi-bin \
    openmpi-common \
    openmpi-doc \
    curl \
    ca-certificates \
    openssl \
    wget \
    rsync \
    libomp-dev \
    sudo \
    nodejs \
    bzip2 \
    libreadline-dev \
    openssl \
    npm \
    && \
    apt-get autoremove --purge -y && \
    apt-get autoclean -y && \
    rm -rf /var/cache/apt/* /var/lib/apt/lists/*

ENV OMP_NUM_THREADS=1
ENV MKL_NUM_THREADS=1
ARG NCORES=8

# Build python from source
RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
    build-essential \
    gdb \
    lcov \
    pkg-config \
    libbz2-dev \
    libffi-dev \
    libgdbm-dev \
    libgdbm-compat-dev \
    liblzma-dev \
    libncurses5-dev \
    libreadline6-dev \
    libsqlite3-dev \
    libssl-dev \
    lzma \
    lzma-dev \
    tk-dev \
    uuid-dev \
    zlib1g-dev \
    && \
    apt  autoremove --purge -y && \
    apt  autoclean -y && \
    rm -rf /var/cache/apt/* /var/lib/apt/lists/*

# install python 3.12
RUN mkdir -p python && cd python && \
    wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz && \
    tar xzf Python-3.12.0.tgz && cd Python-3.12.0 && \
    ./configure --enable-shared --enable-optimizations && make -j $NCORES && make altinstall

# Create & activate venv
RUN ldconfig && /usr/local/bin/python3.12 -m venv .venv/py312
ENV VIRTUAL_ENV=/.venv/py312
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

RUN pip install --upgrade --no-cache-dir \
    cython \
    decorator \
    pytest \
    shapely \
    monty \
    mpi4py \
    numpy \
    scipy \
    Jinja2 \
    Mako \
    setuptools \
    meson \
    ninja \
    ase \
    tornado \
    zmq \
    scikit-image \
    tk  \
    myst_parser \
    sphinx_rtd_theme  \
    linkify-it-py \
    Pandoc

# create source dirs
RUN cd / && mkdir -p triqs && mkdir -p source

ENV PYTHON_VERSION=3.12 \
   CC=gcc-12 CXX=g++-12

# triqs
ENV CPATH=/triqs/include:${CPATH} \
   PATH=/triqs/bin:${PATH} \
   LIBRARY_PATH=/triqs/lib:${LIBRARY_PATH} \
   LD_LIBRARY_PATH=/triqs/lib:${LD_LIBRARY_PATH} \
   PYTHONPATH=/triqs/lib/python3.12/site-packages:${PYTHONPATH} \
   CMAKE_PREFIX_PATH=/triqs/share/cmake:${CMAKE_PREFIX_PATH} \
   TRIQS_ROOT=/triqs

RUN cd /source && git clone -b 3.2.x --depth 1 https://github.com/TRIQS/triqs \
   && cd triqs && mkdir -p build && cd build \
   && cmake ../ -DCMAKE_INSTALL_PREFIX=/triqs -DMPIEXEC_PREFLAGS='--allow-run-as-root' \
   && make -j$NCORES && ctest -j$NCORES && make install

# dft_tools
RUN cd /source && git clone -b 3.2.x --depth 1 https://github.com/TRIQS/dft_tools.git \
    && cd dft_tools && mkdir -p build && cd build \
    && cmake ../ -DMPIEXEC_PREFLAGS='--allow-run-as-root' \
    && make && make test && make install

# cthyb
RUN cd /source && git clone -b 3.2.x --depth 1 https://github.com/TRIQS/cthyb.git \
    && cd cthyb && mkdir -p build && cd build \
    && cmake ../ -DMPIEXEC_PREFLAGS='--allow-run-as-root'  \
    && make -j$NCORES && ctest -j$NCORES && make install

# TPRF
RUN cd /source && git clone -b 3.2.x --depth 1 https://github.com/TRIQS/tprf.git \
    && cd tprf && mkdir -p build && cd build \
    && cmake ../ -DMPIEXEC_PREFLAGS='--allow-run-as-root'  \
    && make -j$NCORES && ctest && make install

# hubbardI
RUN cd /source && git clone -b 3.2.x --depth 1 https://github.com/TRIQS/hubbardI.git \
    && cd hubbardI && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && ctest -j$NCORES && make install

# Hartree-Fock solver
RUN cd /source && git clone -b 3.2.x --depth 1 https://github.com/TRIQS/hartree_fock.git \
    && cd hartree_fock && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && make install

# maxent needed for doc build
RUN cd /source && git clone -b 1.2.x --depth 1 https://github.com/TRIQS/maxent.git \
    && cd maxent && mkdir -p build && cd build \
    && cmake ../ \
    && make -j$NCORES && make install

# solid_dmft
RUN cd /source && git clone -b 3.2.x --depth 1 https://github.com/TRIQS/solid_dmft.git \
    && cd solid_dmft && mkdir -p build && cd build \
    && cmake ../ -DMPIEXEC_PREFLAGS='--allow-run-as-root'  \
    && make -j$NCORES && make test && make install

# remove source
RUN cd / && rm -rf source

# make python3 default
RUN `ln -s /usr/bin/python3 /usr/bin/python`


